<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Python-Basis</title>
    <link href="/2023/03/10/Python-Basis/"/>
    <url>/2023/03/10/Python-Basis/</url>
    
    <content type="html"><![CDATA[<h1 id="Python基础"><a href="#Python基础" class="headerlink" title="Python基础"></a>Python基础</h1><p>python的语法采用缩进方式，<code>input()</code>函数获取用户输入</p><h2 id="1-1-数据类型和变量"><a href="#1-1-数据类型和变量" class="headerlink" title="1.1.数据类型和变量"></a>1.1.数据类型和变量</h2><p>在python中变量是弱类型的，数据类型包括：整数、浮点数、字符串、布尔值、空值等……</p><ul><li><p>字符串(与JavaScript一样，使用<code>&quot;&quot;</code>或<code>&#39;&#39;</code>定义)</p><ul><li><p>转义字符：<code>\</code> ， 可以时字符串内部既包含<code>&#39;</code>或<code>&quot;</code></p><ul><li>字符<code>\</code>本身也要转义，所以<code>\\</code>表示的字符就是<code>\</code></li></ul></li><li><p><code>\n</code>表示换行</p></li><li><p><code>\t</code>表示制表符（tab）</p></li><li><p>不转义：<code>r&#39;&#39;</code></p></li><li><p>多行内容：<code>&#39;&#39;&#39;...&#39;&#39;&#39;</code>:&#96;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;&#x27;line1</span><br><span class="hljs-string"><span class="hljs-meta">... </span>line2</span><br><span class="hljs-string"><span class="hljs-meta">... </span>line3&#x27;&#x27;&#x27;</span>)<br></code></pre></td></tr></table></figure></li></ul></li><li><p>空值：None（JavaScript：Null）</p></li></ul><h2 id="1-2-字符串和编码"><a href="#1-2-字符串和编码" class="headerlink" title="1.2.字符串和编码"></a>1.2.字符串和编码</h2><p>ASCii&lt;UTF-8&lt;Unicode：字节的区别，</p><p>ASCII编码是1个字节，而Unicode编码通常是2个字节。UTF-8编码把一个Unicode字符根据不同的数字大小编码成1-6个字节，常用的英文字母被编码成1个字节，汉字通常是3个字节，只有很生僻的字符才会被编码成4-6个字节</p><ul><li><code>ord()</code>函数获取字符的整数表示</li><li><code>chr()</code>函数把编码转换为对应的字符：</li><li>对<code>bytes</code>类型的数据用带<code>b</code>前缀的单引号或双引号表示：<code>x = b&#39;ABC&#39;</code></li><li>以Unicode表示的<code>str</code>通过<code>encode()</code>方法可以编码为指定的<code>bytes</code><br>‘字符串’.encode(‘编码类型’)</li><li><code>decode()</code>：bytes<code>变为</code>str，例：<code>b&#39;ABC&#39;.decode(&#39;ascii&#39;)</code></li><li><code>len()</code>：获取字符串的长度或字节数</li></ul><table><thead><tr><th align="left">字符</th><th align="left">ASCII</th><th align="left">Unicode</th><th align="left">UTF-8</th></tr></thead><tbody><tr><td align="left">A</td><td align="left">01000001</td><td align="left">00000000 01000001</td><td align="left">01000001</td></tr><tr><td align="left">中</td><td align="left">x</td><td align="left">01001110 00101101</td><td align="left">11100100 10111000 10101101</td></tr></tbody></table><p><img src="https://www.liaoxuefeng.com/files/attachments/923923787018816/0" alt="rw-file-utf-8"></p><p><img src="https://www.liaoxuefeng.com/files/attachments/923923759189600/0" alt="web-utf-8"></p><h2 id="1-3-格式化"><a href="#1-3-格式化" class="headerlink" title="1.3.格式化"></a>1.3.格式化</h2><p>和c语言一致，采用<code>%</code>实现，格式<code>&#39;Hello, %s&#39; % &#39;相应变量&#39;</code></p><table><thead><tr><th align="left">占位符</th><th align="left">替换内容</th></tr></thead><tbody><tr><td align="left">%d</td><td align="left">整数</td></tr><tr><td align="left">%f</td><td align="left">浮点数</td></tr><tr><td align="left">%s</td><td align="left">字符串，同时可以其他类型转换<br />为字符串</td></tr><tr><td align="left">%x</td><td align="left">十六进制整数</td></tr></tbody></table><p><code>format()</code>：用传入的参数依次替换字符串内的占位符<code>&#123;0&#125;</code>、<code>&#123;1&#125;</code>……，以此来格式化字符串<code>&#39;Hello, &#123;0&#125;, 成绩提升了 &#123;1:.1f&#125;%&#39;.format(&#39;小明&#39;, 17.125)</code></p><p><code>f-string</code>：使用以<code>f</code>开头的字符串，如果字符串包含{}，就会以对应的便令替换</p><h2 id="1-4-list和tuple"><a href="#1-4-list和tuple" class="headerlink" title="1.4.list和tuple"></a>1.4.list和tuple</h2><p><code>list</code>类似数组，使用<code>[]</code>定义，使用<code>len()</code>获取其长度，可以正数获取相应位置的元素，也可以倒数获取元素</p><ul><li><code>append()</code>：追加元素到末尾（JavaScript：push）</li><li><code>insert()</code>:在指定位置插入元素</li><li><code>pop()</code>：删除最后一个元素，也可以删除指定位置的元素</li></ul><p><code>tuple</code>：元组，tuple一旦初始化就不能修改（即指向不变），采用()定义</p><p>但定义只有一个元素的tuple时，采用(data,)的方式一区别数学中的括号</p><h2 id="1-5-if条件判断"><a href="#1-5-if条件判断" class="headerlink" title="1.5.if条件判断"></a>1.5.if条件判断</h2><p><code>if</code>条件判断无需加括号，<code>elif</code>表示else if，是else if的缩写，<code>else:</code>要加冒号，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">age = <span class="hljs-number">3</span><br><span class="hljs-keyword">if</span> age &gt;= <span class="hljs-number">18</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;your age is&#x27;</span>, age)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;adult&#x27;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;your age is&#x27;</span>, age)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;teenager&#x27;</span>)<br></code></pre></td></tr></table></figure><p><code>int()</code>函数，可以把<code>input()</code>返回的stri数据类型转换为整数</p>]]></content>
    
    
    <categories>
      
      <category>Python-Note</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>My Hexo Blog Building Process</title>
    <link href="/2023/03/10/my-first-build-remark/"/>
    <url>/2023/03/10/my-first-build-remark/</url>
    
    <content type="html"><![CDATA[<img src="/2023/03/10/my-first-build-remark/739175c1cf079121eb57a66ddbf7048e.jpg" class="" title="This is an example image"><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><p>Hexo:<a href="https://xie.infoq.cn/article/ac51ce1f6e9434779c35cbb6c">参考网址</a> <a href="https://hexo.io/zh-cn/">Hexo网址</a> <a href="https://mrseawave.github.io/blogs/articles/2021/01/05/writing-hexo/">Hexo生成新的文章</a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: [Deployment](</p>]]></content>
    
    
    <categories>
      
      <category>First-Build</category>
      
    </categories>
    
    
    <tags>
      
      <tag>First-Build</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
